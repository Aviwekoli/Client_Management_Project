<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Management</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/script.js" defer></script>
    <style>
        /* Basic styles for the modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 5px;
            width: 500px;
            max-width: 100%;
            max-height: 80%;
            overflow-y: auto;
            position: relative;
        }
        .close-button {
            position: absolute;
            top: 10px;
            right: 15px;
            cursor: pointer;
            font-size: 18px;
        }
        .pagination {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Contacts</h1>

    <!-- Contact List -->
    <h2>Contact List</h2>
    <% if (contacts.length > 0) { %>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Email Address</th>
                    <th style="text-align: center;">Linked Clients</th>
                    <th style="text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                <% contacts.forEach(contact => { %>
                    <tr data-contact-id="<%= contact.id %>">
                        <td><%= contact.name %></td>
                        <td><%= contact.surname %></td>
                        <td><%= contact.email %></td>
                        <td style="text-align: center;" data-column="linked_clients">
                            <%= contact.linked_clients %>
                        </td>
                        <td style="text-align: center;">
                            <button onclick="openLinkClientModal(<%= contact.id %>)">Link Client</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    <% } else { %>
        <p>No contact(s) found.</p>
    <% } %>

    <!-- Modal for linking clients -->
    <div id="linkClientModal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal('linkClientModal')">&times;</span>
            <h2>Link Clients to Contact</h2>
            <div id="clientsList">
                <!-- Clients will be loaded here dynamically -->
            </div>
            <div class="pagination">
                <button id="prevPageBtn" onclick="navigatePage(-1)" disabled>Previous</button>
                <button id="nextPageBtn" onclick="navigatePage(1)">Next</button>
            </div>
            <button onclick="linkSelectedClients()">Link Selected Clients</button>
        </div>
    </div>

    <script>
        let selectedContactId;
        let currentPage = 0; // Current page of clients
        const clientsPerPage = 5;
        let clients = [];

        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'flex';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        function openLinkClientModal(contactId) {
            selectedContactId = contactId;
            openModal('linkClientModal');
            loadClients(contactId);
        }

        function loadClients(contactId, page = 0) {
            fetch('/clients/json')
                .then(response => response.json())
                .then(data => {
                    clients = data;
                    fetchLinkedClients(contactId);
                    updateClientList(page);
                })
                .catch(error => console.error('Error loading clients:', error));
        }

        function fetchLinkedClients(contactId) {
            fetch(`/contacts/${contactId}/linkedClients`)
                .then(response => response.json())
                .then(linkedClients => {
                    const checkboxes = document.querySelectorAll('.client-checkbox');
                    checkboxes.forEach(checkbox => {
                        const clientId = parseInt(checkbox.value, 10);
                        checkbox.checked = linkedClients.some(client => client.id === clientId);
                    });
                })
                .catch(error => console.error('Error fetching linked clients:', error));
        }

        function updateClientList(page) {
            const clientsList = document.getElementById('clientsList');
            const start = page * clientsPerPage;
            const end = start + clientsPerPage;
            const paginatedClients = clients.slice(start, end);

            clientsList.innerHTML = paginatedClients.map(client => `
                <div>
                    <input type="checkbox" class="client-checkbox" value="${client.id}" />
                    ${client.name} (${client.client_code})
                </div>
            `).join('');

            document.getElementById('prevPageBtn').disabled = page === 0;
            document.getElementById('nextPageBtn').disabled = end >= clients.length;
            currentPage = page;
        }

        function linkSelectedClients() {
            const selectedClientIds = Array.from(document.querySelectorAll('.client-checkbox:checked'))
                .map(checkbox => checkbox.value);

            const clientIndexes = selectedClientIds.map(id => parseInt(id, 10));
            console.log("client ids", selectedClientIds);
            console.log("contact ids", clientIndexes)

            fetch('/contacts/linkClients', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ contactId: selectedContactId, linkIds: clientIndexes })
            })
            .then(response => {
                if (response.ok) {
                    closeModal('linkClientModal');
                    updateLinkedClientsCount(selectedContactId, clientIndexes.length);
                }
            })
            .catch(error => console.error('Error linking clients:', error));
        }

        function navigatePage(direction) {
            const newPage = currentPage + direction;
            if (newPage >= 0 && newPage * clientsPerPage < clients.length) {
                updateClientList(newPage);
            }
        }

        function updateLinkedClientsCount(contactId, linkedCount) {
            const row = document.querySelector(`tr[data-contact-id="${contactId}"]`);
            if (row) {
                const linkedClientsCell = row.querySelector('td[data-column="linked_clients"]');
                linkedClientsCell.textContent = linkedCount;
            }
        }
    </script>
</body>
</html>

